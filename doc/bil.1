.\"    Copyright (C) 2002 Patrick Dangla
.\"
.\"    This file is part of the program BIL.
.\"
.\"    This program is free software; you can redistribute it and/or modify
.\"    it under the terms of the GNU General Public License as published by
.\"    the Free Software Foundation; either version 2 of the License, or
.\"    (at your option) any later version.
.\"
.\"    This program is distributed in the hope that it will be useful,
.\"    but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"    GNU General Public License for more details.
.\"
.\"    You should have received a copy of the GNU General Public License
.\"    along with this program; if not, write to the Free Software
.\"    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
.\"
.\"    $Id: bil.1,v 1.1 2004/07/01 22:23:11 dangla Exp $
.\"
.TH Bil 1 "21 Sept 2004" "Bil 2.0" "Bil Manual Pages"
.UC 4



.SH NAME
Bil \- modeling platform based on finite element/volume methods



.SH SYNOPSIS
.B bil [option(s)] [file]



.SH DESCRIPTION
\fIBil\fR is a modeling platform based on finite element/volume methods 
dedicated to coupled problems involved in environmental engineering, 
geomechanical engineering, material sciences, etc..

.PP

If \fIfile\fR is given, \fIBil\fR compute the solution of a problem 
described in \fIfile\fR.

.PP

\fIBil\fR is developped for 1D, 2D and 3D problems. It doesn't include 
a mesh generator and post-processing treatment of outputs. However it 
can read mesh files 
created by the open-source free software \fIGmsh\fR downloadable at 
http://www.geuz.org/gmsh/.
The output files created by \fIBil\fR for 1D problems can be used easily 
by some plotting programs as \fIGnuplot\fR. But as a general rule, 
post-processing options create output files which can be used by 
\fIGmsh\fR for post-processing treatments.



.SH COMPUTATION OPTIONS

.TP 4
.B \-graph \fIfmt\fR
print the graph in \fIfile\fR\fB.graph\fR in the format \fIfmt\fR. Available formats are:
.RS
\fBmetis\fR: for METIS (if installed).
.RE
.RS
\fBhsl_mc40\fR: format given by MC40 from HSL.
.RE

.TP 4
.B \-iperm
print the inverse permutation of nodes in \fIfile\fR\fB.graph.iperm\fR by HSL_MC40.

.TP 4
.B \-eordering \fImeth\fR
print the inverse permutation of elements in file \fIfile\fR\fB.graph.iperm\fR 
by the method \fImeth\fR. Available methods are:
.RS
\fBhsl_mc43\fR: MC43 from HSL.
.RE

.TP 4
.B \-nordering \fImeth\fR
print the inverse permutation of nodes in file \fIfile\fR\fB.graph.iperm\fR 
by the method \fImeth\fR. Available methods are:
.RS
\fBhsl_mc40\fR: MC40 from HSL (same as -iperm)
.RE

.TP 4
.B \-solver \fImethod\fR
use the solver defined by \fImethod\fR. Available methods are:
.RS
\fBcrout\fR: CROUT method (default).
.RE
.RS
\fBsuperlu\fR: Sequential SuperLU (if libsuperlu.so installed).
.RE
.RS
\fBsuperlumt\fR: Multithreaded SuperLU (if libsuperlu_mt.so installed). The number of threads is specified with the option \fB-nthreads\fR (see below).
.RE
.RS
\fBsuperludist\fR: Distributed SuperLU (if libsuperlu_dist.so installed).
.RE
.RS
\fBma38\fR: MA38 from HSL (if libblas.so installed).
.RE
.RS
\fBpetscksp\fR: Petsc KSP solver (if libpetsc.so installed). Following this option we can specify the KSP method and the preconditioner method through the online commands: \fB-ksp_type <method>\fR and \fB-pc_type <method>\fR (see below).
.RE

.TP 4
.B \-nthreads \fIN\fR
use \fIN\fR threads for the solver "superlumt".

.TP 4
.B \-ff \fIN\fR
use the fill factor \fIN\fR for the multi-frontal methods SuperLU (default \fIN\fR=0 meaning that space is allocated internally by SuperLU) or MA38 (default \fIN\fR=2). This option must follow the option \fB-solver\fR \fImethod\fR.

.TP 4
.B \-ksp_type \fImethod\fR
use the KSP method \fImethod\fR for the KSP solver (default is gmres). This option must follow the option \fB-solver petscksp\fR. Available methods are:
.RS
\fBrichardson, chebyshev, cg, pipecg, groppcg, pipecgrr, cgne, fcg, pipefcg, cgls, nash, stcg, gltr, qcg, bicg, bcgs, ibcgs, qmrcgs, fbcgs, fbcgsr, bcgsl, minres, gmres, fgmres, dgmres, pgmres, pipefgmres, lgmres, cr, gcr, pipecr, pipegcr, fetidp, cgs, tfqmr, tcgmr, lsgr, symmlq, tsirm, python, tcqmr, bcgs, cgs, tfqmr, cr, lsqr, bicg, preonly\fR (see the Petsc documentation for more details at https://petsc.org).
.RE

.TP 4
.B \-pc_type \fImethod\fR
use the preconditoner method \fImethod\fR for the KSP solver (default is ilu for gmres). This option must follow the option \fB-solver petscksp\fR. Available methods are:
.RS
\fBnone, jacobi, bjacobi, sor, eisenstat, icc, ilu, asm, gasm, gamg, bddc, ksp, composite, lu, cholesky, shell\fR (see the Petsc documentation for more details at https://petsc.org).
.RE

.TP 4
.B \-with \fIinputs\fR
use the module defined in \fIinputs\fR. Available inputs are:
.RS
\fBMonolithic\fR \fIN\fR: Monolithic approach, \fIN\fR = nb of the temporal discrete solutions kept in memory that can be referred to, for possible use in time discretization schemes. \fIN\fR includes the current time at which the solution is looked for (this is the default module with \fIN\fR=2).
.RE
.RS
\fBSNIA\fR \fIN\fR: Sequential non iterative approach, \fIN\fR = nb of sequences.
.RE



.SH POST-PROCESSING OPTIONS

.TP 4
.B \-post \fIfmt\fR
generate the post-processing files \fIfile\fR\fB.pos\fR* in the format \fIfmt\fR. Available formats are: 
.RS
\fBGmshParsed\fR: for GMSH parsed file format.
.RE
.RS
\fBGmshASCII\fR : for GMSH ASCII file format.
.RE



.SH OTHER OPTIONS

.TP 4
.B \-readonly
parse \fIfile\fR, then exit. 

.TP 4
.B \-create
if \fIfile\fR doesn't exist, open it in writing mode and create an input data file by asking the user for the data.

.TP 4
.B \-debug \fIinput\fR
show data structure for \fIinput\fR. Available inputs are:
.RS
\fBgeom\fR: geometry
.RE
.RS
\fBmesh\fR: mesh
.RE
.RS
\fBmate\fR: materials
.RE
.RS
\fBfield\fR: fields
.RE
.RS
\fBinit\fR: initialization
.RE
.RS
\fBfunc\fR: functions
.RE
.RS
\fBbcond\fR: boundary conditions
.RE
.RS
\fBload\fR: loads
.RE
.RS
\fBpoin\fR: points
.RE
.RS
\fBobval\fR: objective variations
.RE
.RS
\fBiter\fR: iterative process
.RE
.RS
\fBtime\fR: time steps
.RE
.RS
\fBall\fR: all the dataset above
.RE
.RS
\fBinter\fR: interpolation functions
.RE
.RS
\fBcontinuity\fR: equations and unknowns at nodes
.RE
.RS
\fBmatrix\fR: the matrix
.RE
.RS
\fBresidu\fR: the residu
.RE
.RS
\fBnumbering\fR: matrix row/column indexes of equations/unknowns at nodes
.RE


.TP 4
.B \-help
online help.

.TP 4
.B \-info
display general informations.

.TP 4
.B \-model
display the available models.

.TP 4
.B \-model \fImymodel\fR
display an example of material properties for the model \fImymodel\fR.

.TP 4
.B \-modules
display the available modules.



.SH AUTHOR
Patrick Dangla (patrick.dangla@univ-eiffel.fr).



.SH SEE ALSO
The full documentation for Bil is maintained as a Texinfo manual. If the
\fBinfo\fR and \fBbil\fR are properly installed at your site, the command
.IP
.B info bil
.PP
should give you access to the complete manual.
