Geometry       # dimension (1, 2, 3) et symétrie (axis, plan) du pb
2 axis

Mesh                # maillage considéré (généré avec GMSH)
carre.msh


Material            # liste des matériaux (modèles et param. associés)
Model = BBMgas         # nom du modèle
gravity = 0         # gravité
rho_s = 2000        # masse volumique des particules solides
slope_of_swelling_line = 0.011       # indice de gonflement elastique
slope_of_virgin_consolidation_line = 0.065      # pente de la NCL dans le plan (ln p', e)
shear_modulus = 1.e8# module de cisaillement
slope_of_critical_state_line = 1.2             # pente de la CSL dans le plan (p', q)
initial_pre-consolidation_pressure = 0.04e6         # preconsolidation
reference_consolidation_pressure = 0.01e6         # reference consolidation pressure
kappa_s = 0.005
initial_stress_11 = -1000        # contrainte initiale (isotrope)
initial_stress_22 = -1000        # contrainte initiale (isotrope)
initial_stress_33 = -1000        # contrainte initiale (isotrope)
initial_porosity = 0.25          # porosite initiale
rho_l = 1000        # masse volumique du fluide
kl_int = 1e-20       # permeabilite intrinseque au liquide
kg_int = 1e-18       # permeabilite intrinseque au gaz
mu_l = 0.001        # viscosite du liquide
mu_g = 1.81e-5        # viscosite du gaz
suction_cohesion_coefficient = 0.8
poisson = 0.3
vapor_diffusion_coefficient = 2.82e-5
molar_mass_of_dry_gas = 28.97e-3	# (28.97e-3 for air)    kg/mol
henry_law_constant = 6.4e-6    # (6.4E-6)
dissolved_air_diffusion_coefficient = 2.e-11	#(2E-9)
minimum_suction = 1.e2		#Smooths the transition of the wrc towards S_r = 100% at pc < minimum_suction 

Curves_log = wrc   pc = Range{x1 = 1.e2 , x2 = 380.e6, n = 771}  sl = Expressions(1){p0 = 6.4e6 ; m = 0.27 ; sl = (1 + (pc/p0)**(1/(1-m)))**(-m)}	#Van Genuchten's model, in case no wrc file is provided manually
Curves_log = krc   pc = Range{x1 = 1.e2 , x2 = 240.e6, n = 771}  kl = Expressions(1){s0 = 0.07e6; sA = 0.12e6; sB = 60e6; k_s0 = 1.02e-11; k_sA = 4e-14; k_sB = 3e-15; kl = (pc > sA) ? 10**((log10(sA)-log10(pc))/(log10(sB)-log10(sA))*log10(k_sA/k_sB)-log10(k_s0/k_sA)) : (pc < s0) ? 1 : 10**((log10(s0)-log10(pc))/(log10(sA)-log10(s0))*log10(k_s0/k_sA))} kg = Expressions(1){kg = 1}	#Gas relative permeability law kg(pc) data should be provided manually
Curves = lc    pc = Range{x1 = 1.e2 , x2 = 280.e6, n = 400}  lc = Expressions(1){lambda0 = 0.090 ; kappa_0 = 0.037 ; beta = 0.040 ; r = 0.698 ; lc = (lambda0 - kappa_0)/(lambda0*((1-r)*exp(-beta*pc/1e6) + r) - kappa_0)}
Curves = kappa pc = Range{x1 = 1.e2 , x2 = 230.e6, n = 600} kappa = Expressions(1){kappa_0 = 0.037; alpha_il = -0.112; p_atm = 0.1e6; kappa = kappa_0*(1+alpha_il*log((pc+p_atm)/p_atm))}
Curves = kappa_s_p p_net = Range{x1 = 1.e3 , x2 = 15.e6, n = 400} kappa_s_p = Expressions(1){kappa_s0 = 0.023; alpha_sp = -0.180; p_ref = 3.5e4; kappa_s_p = kappa_s0*(1+alpha_sp*log(p_net/p_ref))}
Curves = kappa_s_s pc = Range{x1 = 1.e3 , x2 = 200.e6, n = 400} kappa_s_s = Expressions(1){kappa_s0 = 0.023; alpha_ss = 0.025; s_max = 90e6;  kappa_s_s = (pc < s_max) ? exp(alpha_ss*pc/1e6) : 0.001}



Fields                # champs constants ou linéaires dans l'espace
3
Value = -1.e3 Gradient = 0 0 0 Point = 0 0 0
Value =  1.e3 Gradient = 0 0 0 Point = 0 0 0
Type = affine  Value =  -100.e6    Gradient = 0 0 0   Point = 0 0 0   #suction initial
Type = affine  Value = 1.e5    Gradient = 0 0 0   Point = 0 0 0

Initialization                # initialisation des variables
2
Region = 100 Unknown = p_l Field = 2 Function = 1
Region = 100 Unknown = p_g Field = 3 Function = 0

Functions                # fonctions temporelles, pour les CL
2
N = 7 F(0) = 1 F(1) = 40     F(2) = 1  F(3) = 80    F(4) = 1 F(5) = 160   F(6) = 1
N = 7 F(0) = 0 F(1.999) = 0  F(2) = 40 F(3.999) = 40 F(4) = 80 F(5.999) = 80 F(6) = 160

Boundary Conditions                # conditions aux limites (Dirichlet)
4
Region = 14 Unknown = u_1 Field = 0 Function = 0
Region = 11 Unknown = u_2 Field = 0 Function = 0
Region = 100 Unknown = p_l Field = 1 Function = 2
Region = 100 Unknown = p_g Field = 0 Function = 0

Loads                # conditions aux limites (Neumann)
2
Region = 13 Equation = meca_1 Type = pressure Field = 2 Function = 1
Region = 12 Equation = meca_1 Type = pressure Field = 2 Function = 1

Points                # points de l'espace pour le stockage des variables
1
0.5 0.5

Dates                # dates pour le stockage des données
7
0 1 2 3 4 5 6

Objective Variations                # variables objectives (une par ddl)
u_1 = 1.e-4
u_2 = 1.e-4
p_l = 1000
p_g = 1000

Iterative Process                # param. num. pour le contrôle de la convergence
Iteration = 10
Tolerance = 1e-06
Repetition = 0

Time Steps
Dtini = 1.e-4
Dtmax = 1e-3
